---
# Ansible Playbook for Updating Nagios XI
# Suitable for RHEL7, fact gathering is required to run this playbook

- hosts: localhost
  become: true
  vars:
    tmpdir: /tmp
    nagiosroot: /usr/local/nagios
    ensure_download: true
    xibackup_lookback_period: "25h"
    xibackup_minimum_size: "200M"
    xi_version_file: /usr/local/nagiosxi/var/xiversion

  tasks:

  - name: Show current XI version
    debug: 
      msg: "Current version is {{lookup('file', '{{ xi_version_file }}') }}"

  - name: Perform Product Update check
    debug: 
      msg: "Current version is {{lookup('file', '{{ xi_version_file }}') }}"
      # https://www.nagios.com/checkforupdates/?product=nagiosxi&version=5.5.10
      # Your installation of Nagios XI (5.5.10) is up-to-date, so no upgrade is required. The latest version of Nagios XI is 5.5.10, which was released on 2019-02-12.
      # 
      # https://www.nagios.com/checkforupdates/?product=nagiosxi&version=5.5.9
      # An Update Is Available!
      #
      # Your installation of Nagios XI 5.5.9 is outdated and should be upgraded. The latest version of Nagios XI is 5.5.10, which was released on 2019-02-12

  - name: Ensure backup dir is available
    file:
      path: /store/backups/nagiosxi
      state: directory

  - name: Ensure old nagiosxi directories from {{ tmpdir }} are removed
    file:
      path: "{{ item }}"
      state: absent
    with_items:
      - "{{ tmpdir }}/nagiosxi"
      - "{{ tmpdir }}/xi-latest.tar.gz"

  - name: "Find backups within last {{ xibackup_lookback_period }}"
    find:
      path: "/store/backups/nagiosxi"
      patterns: "nagiosxi*.tar.gz"
      age: "-{{ xibackup_lookback_period }}"
      size: "{{ xibackup_minimum_size }}"
    register: xibackups
    #ansible localhost -m find -a 'path=/store/backups/nagiosxi patterns="nagiosxi*.tar.gz" age=-25h size=5M'
    
  - name:  Ensure recent backup is available
    assert:
      that:
        - xibackups.matched > 0
      msg: "No XI backup files found with last {{ xibackup_lookback_period }} with a minimum size of {{ xibackup_minimum_size }}."

  - name: Ensure nagios preflight check runs fine
    command: "{{ nagiosroot }}/bin/nagios -v {{ nagiosroot }}/etc/nagios.cfg"

  - name: Ensure free space is available on filesystems (gt 15%)
    assert:
      that:
        - mount.size_available > mount.size_total| float * 0.15
      msg: Used disk space reached 85% threshold for {{ mount.mount }}
    vars:
      mount: "{{ ansible_mounts | selectattr('mount','equalto',item.mount) | list | first }}" # equalto may require  pip install Jinja2 -U
    with_items:
      - "{{ ansible_mounts }}"
    register: free_space_all

  - name: Download XI latest
    get_url:
      url: https://assets.nagios.com/downloads/nagiosxi/xi-latest.tar.gz
      dest: "{{ tmpdir }}/xi-latest.tar.gz"
      force: yes
    when: ensure_download
    become: false    # quick workaround to read possible proxy settings from current user

  - name: Unzip XI tarball
    unarchive:
      src: "{{ tmpdir }}/xi-latest.tar.gz"
      dest: "{{ tmpdir }}/"
      remote_src: True

  - name: Run upgrade
    command: ./upgrade
    args:
      chdir: "{{ tmpdir }}/nagiosxi"
    register: upgrade_out

  - name: Display results from upgrade script
    debug:
      var: upgrade_out
      verbosity: 1
