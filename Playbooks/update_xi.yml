---
# Ansible Playbook for Updating Nagios XI
# Suitable for RHEL7, fact gathering is required to run this playbook

# Changes: 
# 20190508 JvdM/AB: Got rid of equalto comparison in filesystem check, improved visual output

- hosts: localhost
  become: true
  vars:
    do_upgrade: true
    do_size_check: true
    tmpdir: /tmp
    nagiosroot: /usr/local/nagios
    xibackup_lookback_period: "25h"
    xibackup_minimum_size: "200M"
    xi_version_file: /usr/local/nagiosxi/var/xiversion

  tasks:
  - name: Load current Nagios XI version
    set_fact:
      xi_version_full: "{{ lookup('ini', 'full type=properties file={{ xi_version_file }}') }}"

  - name: Show current XI version of current installation
    debug:
      msg: "Currently installed XI version is {{ xi_version_full }}"

  ## The conditional check fails on ansible-2.7.8-1 when using set_fact. Version 2.7.5 was OK. So let's use module debug
  #- name: Load upgrade results check from www.nagios.com/checkforupdates
  #  set_fact:
  #    update_check_res: "{{ lookup('url', 'https://www.nagios.com/checkforupdates/?product=nagiosxi&version={{ xi_version_full }}') }}"

  - name: Load upgrade results check from www.nagios.com/checkforupdates
    set_fact:
      update_check_res: "{{ lookup('url', 'https://www.nagios.com/checkforupdates/?product=nagiosxi&version={{ xi_version_full }}',split_lines=True) }}"

  - name: Debug - Show upgrade check results
    debug:
      var: update_check_res
      verbosity: 1

      # Example output from www.nagios.com/checkforupdates
      #
      # Case 1: up to date
      # https://www.nagios.com/checkforupdates/?product=nagiosxi&version=5.5.10
      # Your installation of Nagios XI (5.5.10) is up-to-date, so no upgrade is required. The latest version of Nagios XI is 5.5.10, which was released on 2019-02-12.
      #
      # Case 2: outdated
      # https://www.nagios.com/checkforupdates/?product=nagiosxi&version=5.5.9
      # An Update Is Available!
      #
      # Your installation of Nagios XI 5.5.9 is outdated and should be upgraded. The latest version of Nagios XI is 5.5.10, which was released on 2019-02-12

  - name:  Determine if upgrade is necessary
    assert:
      that:
        - "'is up-to-date, so no upgrade is required' not in update_check_res"
      success_msg: "Upgrade available and necessary. Continuing playbook"
      fail_msg: "No upgrade necessary. Stopping playbook"

  - name: Ensure old nagiosxi directories from {{ tmpdir }} are removed
    file:
      path: "{{ item }}"
      state: absent
    with_items:
      - "{{ tmpdir }}/nagiosxi"
      - "{{ tmpdir }}/xi-latest.tar.gz"

  - name: Ensure backup dir is available
    file:
      path: /store/backups/nagiosxi
      state: directory

  - name: "Find backups within last {{ xibackup_lookback_period }}"
    find:
      path: "/store/backups/nagiosxi"
      patterns: "nagiosxi*.tar.gz"
      age: "-{{ xibackup_lookback_period }}"
      size: "{{ xibackup_minimum_size }}"
    register: xibackups
    #ansible localhost -m find -a 'path=/store/backups/nagiosxi patterns="nagiosxi*.tar.gz" age=-25h size=5M'

  - name:  Ensure recent backup is available
    assert:
      that:
        - xibackups.matched > 0
      msg: "No XI backup files found with last {{ xibackup_lookback_period }} with a minimum size of {{ xibackup_minimum_size }}."

  - name: Ensure nagios preflight check runs fine
    command: "{{ nagiosroot }}/bin/nagios -v {{ nagiosroot }}/etc/nagios.cfg"

  - name: Ensure free space is available on filesystems (gt 15%)
    assert:
      that:
        - item.size_available > item.size_total| float * 0.15
      fail_msg: "{{ item.mount }} has less than 15% free space! Aborting playbook."
      success_msg: "{{ item.mount }} has enough free space: Continue"
    loop:
      "{{ ansible_mounts }}"
    loop_control:
      label: "{{ item.mount }}"
    when: do_size_check

  - block:
    - name: Download XI latest
      get_url:
        url: https://assets.nagios.com/downloads/nagiosxi/xi-latest.tar.gz
        dest: "{{ tmpdir }}/xi-latest.tar.gz"
        force: yes
      become: false    # quick workaround to read possible proxy settings from current user

    - name: Unzip XI tarball
      unarchive:
        src: "{{ tmpdir }}/xi-latest.tar.gz"
        dest: "{{ tmpdir }}/"
        remote_src: True
    - name: Run upgrade
      shell: ./upgrade -n
      args:
        chdir: "{{ tmpdir }}/nagiosxi"
      register: upgrade_out

    - name: Display stderr from upgrade script
      debug:
        msg: "{{ upgrade_out.stderr_lines }}"

    - name: Display stdout from upgrade script
      debug:
        msg: "{{ upgrade_out.stdout_lines }}"
    when: do_upgrade
...
